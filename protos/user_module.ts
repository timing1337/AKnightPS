// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "user_module.proto" (syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message LogoutRequest
 */
export interface LogoutRequest {
}
/**
 * @generated from protobuf message DebugLogoutRequest
 */
export interface DebugLogoutRequest {
}
/**
 * @generated from protobuf message DebugLogoutReply
 */
export interface DebugLogoutReply {
}
/**
 * @generated from protobuf message LogoutReply
 */
export interface LogoutReply {
}
// @generated message type with reflection information, may provide speed optimized methods
class LogoutRequest$Type extends MessageType<LogoutRequest> {
    constructor() {
        super("LogoutRequest", []);
    }
    create(value?: PartialMessage<LogoutRequest>): LogoutRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogoutRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogoutRequest): LogoutRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LogoutRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LogoutRequest
 */
export const LogoutRequest = new LogoutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DebugLogoutRequest$Type extends MessageType<DebugLogoutRequest> {
    constructor() {
        super("DebugLogoutRequest", []);
    }
    create(value?: PartialMessage<DebugLogoutRequest>): DebugLogoutRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DebugLogoutRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DebugLogoutRequest): DebugLogoutRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DebugLogoutRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DebugLogoutRequest
 */
export const DebugLogoutRequest = new DebugLogoutRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DebugLogoutReply$Type extends MessageType<DebugLogoutReply> {
    constructor() {
        super("DebugLogoutReply", []);
    }
    create(value?: PartialMessage<DebugLogoutReply>): DebugLogoutReply {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DebugLogoutReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DebugLogoutReply): DebugLogoutReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DebugLogoutReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DebugLogoutReply
 */
export const DebugLogoutReply = new DebugLogoutReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogoutReply$Type extends MessageType<LogoutReply> {
    constructor() {
        super("LogoutReply", []);
    }
    create(value?: PartialMessage<LogoutReply>): LogoutReply {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogoutReply>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogoutReply): LogoutReply {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LogoutReply, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LogoutReply
 */
export const LogoutReply = new LogoutReply$Type();
